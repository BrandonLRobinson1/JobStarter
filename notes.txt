set up gulp
chai/mocha
databases - check
server
express router
graphql
SASS
redux
webcam
elasticSearch
AWS
Docker

gulp - today
redux
graphql
do a system design
and table just because

`````*figure out why gulp watch isnt working
`````figure out site for graphql

google maps integration, to see where the job is in accordance to you


make links to that when they click it it takes you to where on the page the content is not just the content itself

use try catch finally

branches

underscore functtions

MAKE SURE TO ADD APPROPRIATE COMMENTS AND DOCUMENTATION

(mongoose's default promise library) is deprecated, plug in your own promise library instead: http://mongoosejs.com/docs/promises.html

--starters

  "scripts": {
    "start": "SET NODE_ENV=dev && node server/server.js",
    "test": "mocha --timeout 10000"
  },

SET NODE_ENV=dev &&

try and fix NODEENV and test dev with package json

https://stackoverflow.com/questions/42893669/how-do-i-pass-props-in-react-router-v4


set a cookie - set up back end for auth and endpoints

-routes welcome with full forms, integrated with database, use wes bos and axios with paths
-exact paths
-prop types
-fix log in and sign in forms with real emails and clear database in mongo
-cookies
-fix sign in log in denials
-fines tune everything
-new branch


//test sign up form

render() {
//     let loggedIn = this.state.loggedIn;
//     let newSignUp = this.state.newSignUp;
//     console.log(this.props)

//     // paths
//     //if loggedin AND newsignp are false render origial

//     //if new sign up is true, render info gather, then route real home by setting logged in to true and signed in to false
 
//     // if logged in is true, render new everythign including nav

//     // if(!loggedIn && !newSignUp)
//       return (
//         <div className="container">
//           <Welcome mainState={this.state}/>
//         </div>
//       )

//     // if (loggedIn){
//     //   console.log('$$$$');
//     // }
//     }
    
//   }

// App.contextTypes = {
//   router: PropTypes.object
// }

// export default App